trigger:
  branches:
    include:
      - main
      - release*
  paths:
    exclude:
      - docs
      - examples
      - img
      - README*
      - LICENSE
      - .devcontainer
      - .github
      - CHANGELOG
  tags:
    include:
      - "*"
pr:
  branches:
    include:
      - main
      - release*
  paths:
    exclude:
      - docs
      - examples
      - img
      - README*
      - LICENSE
      - .devcontainer
      - .github
      - CHANGELOG

variables:
  - name: tag
    value: ""
  - name: goVersion
    value: "1.24.2"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: macos_demo_build_smoke
    displayName: macOS Demo Build Smoke Test
    jobs:
      - job: build_macos_demo
        displayName: Build macOS Demo on Linux
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: GoTool@0
            inputs:
              version: $(goVersion)
          - script: |
              set -euo pipefail
              echo '=== macOS Demo Build Smoke Test ==='
              echo 'System info:'
              uname -a
              docker --version
              go version
              echo 'Setting up Docker buildx for multi-arch builds...'
              docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
              docker buildx create --use
              echo 'Building macOS-targeted demo packages (simulating macOS environment)...'
              # Create a wrapper script that simulates macOS environment
              cat > build_macos_demo.sh << 'EOF'
              #!/bin/bash
              # Override uname to simulate macOS
              function uname() {
                if [ "$1" = "-s" ]; then
                  echo "Darwin"
                elif [ "$1" = "-m" ]; then
                  echo "x86_64"
                else
                  command uname "$@"
                fi
              }
              export -f uname
              # Run the original script with architecture parameter
              bash test/scripts/deviceshifu-demo-aio.sh build_demo "$1"
              EOF
              chmod +x build_macos_demo.sh
              echo 'Building for amd64...'
              ./build_macos_demo.sh amd64
              echo 'Building for arm64...'
              ./build_macos_demo.sh arm64
              echo 'Checking built artifacts:'
              ls -la shifu_demo_aio_darwin_*.tar || ls -la *.tar || echo "No tar files found"
              echo 'Extracting and testing demo structure:'
              if [ -f shifu_demo_aio_darwin_amd64.tar ]; then
                mkdir -p test_extract
                echo 'Contents of darwin amd64 tar:'
                tar -tf shifu_demo_aio_darwin_amd64.tar | head -20
                tar -xf shifu_demo_aio_darwin_amd64.tar -C test_extract
                echo 'Demo structure:'
                find test_extract -name "*.sh" -o -name "shifu*" | head -10
                echo '✅ macOS demo build smoke test PASSED'
              else
                echo '❌ macOS demo tar file not found - showing what we got:'
                ls -la *.tar || echo "No tar files at all"
                exit 1
              fi
            displayName: Build and verify macOS demo packages