trigger:
  branches:
    include:
      - main
      - release*
  paths:
    exclude:
      - docs
      - examples
      - img
      - README*
      - LICENSE
      - .devcontainer
      - .github
      - CHANGELOG
  tags:
    include:
      - "*"
pr:
  branches:
    include:
      - main
      - release*
  paths:
    exclude:
      - docs
      - examples
      - img
      - README*
      - LICENSE
      - .devcontainer
      - .github
      - CHANGELOG

variables:
  - name: tag
    value: ""
  - name: goVersion
    value: "1.24.2"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: macos_docker_smoke
    displayName: macOS Docker smoke
    jobs:
      - job: macos_docker_smoke
        displayName: macOS Docker smoke
        pool:
          vmImage: "macOS-latest"
        steps:
          - script: |
              set -euo pipefail
              DOCKER_CLI="/Applications/Docker.app/Contents/Resources/bin/docker"
              echo 'Installing Docker Desktop...'
              brew install --cask --no-quarantine docker-desktop
              echo 'Starting Docker Desktop...'
              open -a /Applications/Docker.app --args --unattended --accept-license
              echo 'Waiting for Docker to start...'
              i=0
              while ! "$DOCKER_CLI" system info &>/dev/null; do
                if [ $i -eq 0 ]; then
                  printf '%s' '-- Waiting for Docker to finish starting up...'
                else
                  printf '.'
                fi
                sleep 10
                i=$((i + 1))
                if [ $i -gt 60 ]; then
                  echo '\n::error::Docker did not start within expected time';
                  ls -la /Applications/Docker.app/Contents/MacOS/ || true
                  ls -la /Applications/Docker.app/Contents/Resources/bin/ || true
                  exit 1
                fi
              done
              printf '\nDocker Desktop is ready\n'
              "$DOCKER_CLI" --version
              "$DOCKER_CLI" run --rm hello-world
            displayName: Install Docker Desktop and run hello-world