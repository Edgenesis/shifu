apiVersion: v1
kind: ConfigMap
metadata:
  name: agv-configmap-0.0.1
  namespace: default
data:
  driverProperties: |
    driverSku: AGV
    driverImage: edgenesis/agv:v0.0.1
  instructions: |
    get_position:
    get_status:
# Telemetries are configurable health checks of the EdgeDevice
# Developer/user can configure certain instructions to be used as health check
# of the device. In this example, the device_health telemetry is mapped to
# "get_status" instruction, executed every 1000 ms
  telemetries: |
    device_health:
      properties:
        instruction: get_status
        initialDelayMs: 1000
        intervalMs: 1000
  states: |
    globalDefaultStateDuration:2000 // default duration for each state, used when no duration is provided, if -1 then infinite 
    globalDefaultTransition:idle // default state to transition to upon duration is passed 
    - state: idle 
      availableInstructions: // all allowed instructions; if received instructions not in the list, will return HTTP 403 
      - move: 
        nextState:move_in_progress 
        ackReturn:"HTTP 200" //optional, if not specified, it will use the default value "HTTP 200" 
        doneSignal:"HTTP 200" // expected signal received from device, optional with default "HTTP 200" 
        exceptionReturn:"HTTP 500" // indicating error, optional with default "HTTP 500" 
      - move_cycle: x`
        nextState:move_cycle_in_progress 
    - state: move_cycle_in_progress 
      defaultTransition:release_in_progress // override globalDefaultTransition 
    - state: move_in_progress 
      defaultTransition: move_finished 
      availableInstructions: 
      - stop: 
        nextState:finished 
    - state: finished 
      availableInstructions: 
      - move: 
        nextState:move_in_progress 
      - agv_release: 
        nextState:release_in_progress 
    - state: release_in_progress 
      defaultStateDuration:5000 // overrided globalDefaultStateDuration 
    - state: uninitialized 
      availableInstructions: 
      - initialize: 
       nextState:idle 
    - state: error 
      availableInstructions: 
      - clear_errors: 
        nextState:finished 
